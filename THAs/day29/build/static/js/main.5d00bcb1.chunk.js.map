{"version":3,"sources":["components/Form.jsx","actions/index.js","components/WeatherCard.jsx","components/ToggleTheme.jsx","App.jsx","reducers/locationReducer.js","reducers/locDataReducer.js","reducers/themeReducer.js","reducers/index.js","store.js","index.js"],"names":["Form","location","useSelector","state","theme","dispatch","useDispatch","className","type","value","onChange","e","payload","updateLocation","target","onClick","fetch","then","response","json","data","console","log","updateLocData","WeatherCard","locData","src","current","condition","icon","alt","temp_c","text","name","wind_kph","humidity","precip_mm","ToggleTheme","App","locationReducer","action","locDataReducer","themeReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5d00bcb1.chunk.js","sourcesContent":["import React from 'react';\r\nimport {useSelector, useDispatch } from 'react-redux';\r\nimport {updateLocation, updateLocData} from '../actions';\r\n\r\nexport default function Form() {\r\n    const location = useSelector(state => state.location);\r\n    const theme = useSelector(state => state.theme);\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <section className=\"container\">\r\n            <section className=\"row\">\r\n                <section className=\"col-12 form\">\r\n                    <input\r\n                        type=\"text\"\r\n                        value={location}\r\n                        onChange={(e) => {\r\n                            dispatch(updateLocation(e.target.value));\r\n                        }}\r\n                    />\r\n                    <button\r\n                        className={theme ? \"btn btn-light\" : \"btn btn-dark\"}\r\n                        onClick={() => {\r\n                            dispatch(updateLocData(location));\r\n                        }}\r\n                        // onKeyPress={(e) => {\r\n                        //     if (e.key === 'Enter') {\r\n                        //         updateLocData();\r\n                        //     }\r\n                        // }}\r\n                    >Submit</button>\r\n                </section>\r\n            </section>\r\n\r\n        </section>\r\n    );\r\n}","const updateLocation = (location) => {\r\n    return {\r\n        type: 'UPDATE_LOCATION',\r\n        payload: location,\r\n    };\r\n};\r\n\r\nconst updateLocData = (location) => {\r\n    return (dispatch) => {\r\n        fetch(`http://api.weatherapi.com/v1/current.json?key=30a3e9cc1a084b70b01124944210908&q=${location}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(\"loading data\", data);\r\n                dispatch({\r\n                    type: 'UPDATE_LOC_DATA',\r\n                    payload: data,\r\n                });\r\n            })\r\n    };\r\n};\r\n\r\nconst toggleTheme = () => {\r\n    return {\r\n        type: 'TOGGLE_THEME',\r\n    };\r\n};\r\n\r\nexport { updateLocData, updateLocation, toggleTheme };\r\n\r\n// {\r\n//     type: 'UPDATE_LOC_DATA',\r\n//     payload: locData,\r\n// };","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport default function WeatherCard() {\r\n    const theme = useSelector(state => state.theme);\r\n    const locData = useSelector(state => state.locData);\r\n    return (\r\n        <section className=\"container\">\r\n            <section className=\"row\">\r\n                <section className=\"offset-md-4 col-12 col-md-4 weather\">\r\n                    <section className={theme ? 'card' : 'card light'}>\r\n                        {locData.location ? (\r\n                            <section>\r\n                                {/* <h2>{locData.location.name}</h2> */}\r\n                                <img src={locData.current.condition.icon} alt=\"current condition icon\" />\r\n                                <section className=\"temp\">\r\n                                    {locData.current.temp_c}Â°C\r\n                                </section>\r\n                                <section className=\"desc\">{locData.current.condition.text}</section>\r\n                                <section className=\"location\">{locData.location.name}</section>\r\n                                <div className=\"container\">\r\n                                    <div className=\"row whp\">\r\n                                        <div className=\"col\">\r\n                                            <section className=\"title\">Wind Now</section>\r\n                                            <section className=\"data\">{locData.current.wind_kph}<span className=\"unit\">KM/h</span></section>\r\n                                        </div>\r\n                                        <div className=\"col\">\r\n                                            <section className=\"title\">Humidity</section>\r\n                                            <section className=\"data\">{locData.current.humidity}<span className=\"unit\">%</span></section>\r\n                                        </div>\r\n                                        <div className=\"col\">\r\n                                            <section className=\"title\">Precipitaion</section>\r\n                                            <section className=\"data\">{locData.current.precip_mm}<span className=\"unit\">mm</span></section>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </section>\r\n                        ) : (\r\n                            <h2>Place not found!</h2>\r\n                        )}\r\n                    </section>\r\n                </section>\r\n            </section>\r\n        </section>\r\n    );\r\n}","import {useSelector, useDispatch} from 'react-redux';\r\nimport { toggleTheme } from '../actions';\r\n\r\nexport default function ToggleTheme() {\r\n    const theme = useSelector(state => state.theme);\r\n    const dispatch = useDispatch();\r\n    return <section className=\"toggle-theme\">\r\n        <button \r\n            className={theme ? \"btn btn-light\" : \"btn btn-dark\"}\r\n            onClick={() => dispatch(toggleTheme())}    \r\n        >\r\n            {theme ? 'Light' : 'Dark'} \r\n        </button>\r\n    </section>\r\n}","import 'bootstrap/dist/css/bootstrap.min.css';\nimport './css/App.css';\n// import { useState, useEffect } from 'react';\nimport Form from './components/Form';\nimport WeatherCard from './components/WeatherCard';\nimport { useSelector } from 'react-redux';\nimport ToggleTheme from './components/ToggleTheme';\n\nfunction App() {\n  // const apiKey = '30a3e9cc1a084b70b01124944210908';\n  // const [location, setLocation] = useState('');\n  // const [locData, setLocData] = useState({});\n\n  // const updateLocData = () => {\n  //   fetch(`http://api.weatherapi.com/v1/forecast.json?key=${apiKey}&q=${location}&days=5`)\n  //   .then(response => response.json())\n  //   .then(data => {\n  //     console.log(data);\n  //     setLocData(data);\n  //   })\n  // }\n\n  const theme = useSelector(state => state.theme);\n  console.log(theme);\n  return (\n    <section className={theme ? 'App' : 'App light'}>\n      <ToggleTheme />\n      <Form />\n      <WeatherCard />\n    </section>\n  );\n}\n\nexport default App;\n","const locationReducer = (state = \"\", action) => {\r\n    if(action.type === 'UPDATE_LOCATION') {\r\n        return action.payload;\r\n    } \r\n    return state;\r\n};\r\n\r\nexport default locationReducer;","const locDataReducer = (state = {}, action) => {\r\n    if(action.type === 'UPDATE_LOC_DATA') {\r\n        return action.payload;\r\n    } \r\n    return state;\r\n};\r\n\r\nexport default locDataReducer;","const themeReducer = (state = true, action) => {\r\n    if(action.type === 'TOGGLE_THEME') {\r\n        return !state;\r\n    }\r\n    return state;\r\n};\r\n\r\nexport default themeReducer;","import { combineReducers } from 'redux';\r\nimport locationReducer from './locationReducer';\r\nimport locDataReducer from './locDataReducer';\r\nimport themeReducer from './themeReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    location: locationReducer,\r\n    locData: locDataReducer,\r\n    theme: themeReducer,\r\n});\r\n\r\nexport default rootReducer;","import {createStore, applyMiddleware} from 'redux';\r\nimport rootReducer from './reducers';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport store from './store';\n\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}