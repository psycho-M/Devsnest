{"version":3,"sources":["components/Form.jsx","actions/index.js","components/WeatherCard.jsx","App.jsx","reducers/locationReducer.js","reducers/locDataReducer.js","reducers/index.js","store.js","index.js"],"names":["Form","location","useSelector","state","dispatch","useDispatch","className","type","value","onChange","e","payload","updateLocation","target","onClick","fetch","then","response","json","data","console","log","updateLocData","WeatherCard","locData","src","current","condition","icon","alt","temp_c","text","name","wind_kph","humidity","precip_mm","App","locationReducer","action","locDataReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAIe,SAASA,IACpB,IAAMC,EAAWC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,YACtCG,EAAWC,cACjB,OACI,yBAASC,UAAU,YAAnB,SACI,yBAASA,UAAU,MAAnB,SACI,0BAASA,UAAU,cAAnB,UACI,uBACIC,KAAK,OACLC,MAAOP,EACPQ,SAAU,SAACC,GACPN,ECfL,SAACH,GACpB,MAAO,CACHM,KAAM,kBACNI,QAASV,GDYoBW,CAAeF,EAAEG,OAAOL,WAGzC,wBACIF,UAAU,kBACVQ,QAAS,WACLV,ECdN,SAACH,GACnB,OAAO,SAACG,GACJW,MAAM,mFAAD,OAAoFd,IACpFe,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACFC,QAAQC,IAAI,eAAgBF,GAC5Bf,EAAS,CACLG,KAAM,kBACNI,QAASQ,QDMQG,CAAcrB,KAH/B,2BEfL,SAASsB,IACpB,IAAMC,EAAUtB,aAAY,SAAAC,GAAK,OAAIA,EAAMqB,WAC3C,OACI,yBAASlB,UAAU,YAAnB,SACI,yBAASA,UAAU,MAAnB,SACI,yBAASA,UAAU,sCAAnB,SACI,yBAASA,UAAU,OAAnB,SACKkB,EAAQvB,SACL,oCAEI,qBAAKwB,IAAKD,EAAQE,QAAQC,UAAUC,KAAMC,IAAI,2BAC9C,0BAASvB,UAAU,OAAnB,UACKkB,EAAQE,QAAQI,OADrB,WAGA,yBAASxB,UAAU,OAAnB,SAA2BkB,EAAQE,QAAQC,UAAUI,OACrD,yBAASzB,UAAU,WAAnB,SAA+BkB,EAAQvB,SAAS+B,OAChD,qBAAK1B,UAAU,YAAf,SACI,sBAAKA,UAAU,UAAf,UACI,sBAAKA,UAAU,MAAf,UACI,yBAASA,UAAU,QAAnB,sBACA,0BAASA,UAAU,OAAnB,UAA2BkB,EAAQE,QAAQO,SAAS,sBAAM3B,UAAU,OAAhB,wBAExD,sBAAKA,UAAU,MAAf,UACI,yBAASA,UAAU,QAAnB,sBACA,0BAASA,UAAU,OAAnB,UAA2BkB,EAAQE,QAAQQ,SAAS,sBAAM5B,UAAU,OAAhB,qBAExD,sBAAKA,UAAU,MAAf,UACI,yBAASA,UAAU,QAAnB,0BACA,0BAASA,UAAU,OAAnB,UAA2BkB,EAAQE,QAAQS,UAAU,sBAAM7B,UAAU,OAAhB,8BAMrE,0DCTb8B,MAtBf,WAcE,OACE,0BAAS9B,UAAU,MAAnB,UACE,cAACN,EAAD,IACA,cAACuB,EAAD,Q,OChBSc,EAPS,WAAyB,IAAxBlC,EAAuB,uDAAf,GAAImC,EAAW,uCAC5C,MAAmB,oBAAhBA,EAAO/B,KACC+B,EAAO3B,QAEXR,GCGIoC,EAPQ,WAAyB,IAAxBpC,EAAuB,uDAAf,GAAImC,EAAW,uCAC3C,MAAmB,oBAAhBA,EAAO/B,KACC+B,EAAO3B,QAEXR,GCKIqC,EALKC,YAAgB,CAChCxC,SAAUoC,EACVb,QAASe,I,OCAEG,EAFDC,YAAYH,EAAaI,YAAgBC,MCIvDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJO,SAASC,eAAe,W","file":"static/js/main.7f9b05ad.chunk.js","sourcesContent":["import React from 'react';\r\nimport {useSelector, useDispatch } from 'react-redux';\r\nimport {updateLocation, updateLocData} from '../actions';\r\n\r\nexport default function Form() {\r\n    const location = useSelector(state => state.location);\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <section className=\"container\">\r\n            <section className=\"row\">\r\n                <section className=\"col-12 form\">\r\n                    <input\r\n                        type=\"text\"\r\n                        value={location}\r\n                        onChange={(e) => {\r\n                            dispatch(updateLocation(e.target.value));\r\n                        }}\r\n                    />\r\n                    <button\r\n                        className=\"btn btn-primary\"\r\n                        onClick={() => {\r\n                            dispatch(updateLocData(location));\r\n                        }}\r\n                        // onKeyPress={(e) => {\r\n                        //     if (e.key === 'Enter') {\r\n                        //         updateLocData();\r\n                        //     }\r\n                        // }}\r\n                    >Submit</button>\r\n                </section>\r\n            </section>\r\n\r\n        </section>\r\n    );\r\n}","const updateLocation = (location) => {\r\n    return {\r\n        type: 'UPDATE_LOCATION',\r\n        payload: location,\r\n    };\r\n};\r\n\r\nconst updateLocData = (location) => {\r\n    return (dispatch) => {\r\n        fetch(`http://api.weatherapi.com/v1/current.json?key=30a3e9cc1a084b70b01124944210908&q=${location}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(\"loading data\", data);\r\n                dispatch({\r\n                    type: 'UPDATE_LOC_DATA',\r\n                    payload: data,\r\n                });\r\n            })\r\n    };\r\n};\r\n\r\nexport { updateLocData, updateLocation };\r\n\r\n// {\r\n//     type: 'UPDATE_LOC_DATA',\r\n//     payload: locData,\r\n// };","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport default function WeatherCard() {\r\n    const locData = useSelector(state => state.locData);\r\n    return (\r\n        <section className=\"container\">\r\n            <section className=\"row\">\r\n                <section className=\"offset-md-4 col-12 col-md-4 weather\">\r\n                    <section className=\"card\">\r\n                        {locData.location ? (\r\n                            <section>\r\n                                {/* <h2>{locData.location.name}</h2> */}\r\n                                <img src={locData.current.condition.icon} alt=\"current condition icon\" />\r\n                                <section className=\"temp\">\r\n                                    {locData.current.temp_c}Â°C\r\n                                </section>\r\n                                <section className=\"desc\">{locData.current.condition.text}</section>\r\n                                <section className=\"location\">{locData.location.name}</section>\r\n                                <div className=\"container\">\r\n                                    <div className=\"row whp\">\r\n                                        <div className=\"col\">\r\n                                            <section className=\"title\">Wind Now</section>\r\n                                            <section className=\"data\">{locData.current.wind_kph}<span className=\"unit\">KM/h</span></section>\r\n                                        </div>\r\n                                        <div className=\"col\">\r\n                                            <section className=\"title\">Humidity</section>\r\n                                            <section className=\"data\">{locData.current.humidity}<span className=\"unit\">%</span></section>\r\n                                        </div>\r\n                                        <div className=\"col\">\r\n                                            <section className=\"title\">Precipitaion</section>\r\n                                            <section className=\"data\">{locData.current.precip_mm}<span className=\"unit\">mm</span></section>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </section>\r\n                        ) : (\r\n                            <h2>Place not found!</h2>\r\n                        )}\r\n                    </section>\r\n                </section>\r\n            </section>\r\n        </section>\r\n    );\r\n}","import 'bootstrap/dist/css/bootstrap.min.css';\nimport './css/App.css';\n// import { useState, useEffect } from 'react';\nimport Form from './components/Form';\nimport WeatherCard from './components/WeatherCard';\n\nfunction App() {\n  // const apiKey = '30a3e9cc1a084b70b01124944210908';\n  // const [location, setLocation] = useState('');\n  // const [locData, setLocData] = useState({});\n\n  // const updateLocData = () => {\n  //   fetch(`http://api.weatherapi.com/v1/forecast.json?key=${apiKey}&q=${location}&days=5`)\n  //   .then(response => response.json())\n  //   .then(data => {\n  //     console.log(data);\n  //     setLocData(data);\n  //   })\n  // }\n\n  return (\n    <section className='App'>\n      <Form />\n      <WeatherCard />\n    </section>\n  );\n}\n\nexport default App;\n","const locationReducer = (state = \"\", action) => {\r\n    if(action.type === 'UPDATE_LOCATION') {\r\n        return action.payload;\r\n    } \r\n    return state;\r\n};\r\n\r\nexport default locationReducer;","const locDataReducer = (state = {}, action) => {\r\n    if(action.type === 'UPDATE_LOC_DATA') {\r\n        return action.payload;\r\n    } \r\n    return state;\r\n};\r\n\r\nexport default locDataReducer;","import { combineReducers } from 'redux';\r\nimport locationReducer from './locationReducer';\r\nimport locDataReducer from './locDataReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    location: locationReducer,\r\n    locData: locDataReducer,\r\n});\r\n\r\nexport default rootReducer;","import {createStore, applyMiddleware} from 'redux';\r\nimport rootReducer from './reducers';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport store from './store';\n\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}